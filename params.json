{
  "name": "VDPM",
  "tagline": "Mini build system & package manager for $VITASDK",
  "body": "Vitadev Package manager\r\n=============\r\n\r\nVDPM is a project which aims on getting common libraries building for the PS Vita using the\r\n[vitasdk toolchain](https://github.com/vitasdk). It was based off the original idea of xerpi's\r\nvita\\_portlibs.\r\n\r\n\r\nUsage\r\n=====\r\n\r\nGetting started\r\n---------------\r\n\r\n### Mac & Linux\r\nFirst install cmake, you can get this from [Homebrew](http://brew.sh) on Mac (`brew install cmake`), \r\nand from your distro's package manager on Linux (on ubuntu: `sudo apt-get install cmake`).\r\n\r\n```shell\r\ngit clone https://github.com/vitadev/vdpm\r\ncd vdpm\r\ncp config.sample config\r\n./bootstrap-vitasdk.sh # skip this step if you already have vitasdk installed\r\n                       # to /usr/local/vitasdk and have $VITASDK set\r\nexport VITASDK=/usr/local/vitasdk # define $VITASDK if you havent already\r\nexport PATH=$VITASDK/bin:$PATH # add vitasdk tool to $PATH if you havent already\r\n./install-all.sh\r\n```\r\n\r\n### Windows (msys2)\r\n```shell\r\npacman -Syu\r\npacman -S git\r\ngit clone https://github.com/vitadev/vdpm\r\ncd vdpm\r\ncp config.sample config\r\n./bootstrap-vitasdk.sh # skip this step if you already have vitasdk installed\r\n                       # to /usr/local/vitasdk and have $VITASDK set\r\nexport VITASDK=/usr/local/vitasdk # define $VITASDK if you havent already\r\nexport PATH=$VITASDK/bin:$PATH # add vitasdk tool to $PATH if you havent already\r\n./install-all.sh\r\n```\r\n\r\nvdpm\r\n----\r\n\r\nvdpm helps with building libraries\r\nand software from their package description (in `pkg/*`).\r\n\r\n```\r\nUsage: vdpm [-iudlLx] [pkg pkg ..]\r\n -x : execute or enter into the vdpm shell\r\n -u : upgrade package\r\n -i : install package (.tgz or pkgname)\r\n -d : deinstall package\r\n -c : clean package (-ci to clean + install)\r\n -C : check checksum of pkg files (u=unmodified, m=modified)\r\n -r : remove devel/man/doc files to _remove/\r\n      -r: list, -ri: reinstall, -rm: remove\r\n -s : search package by keyword\r\n -l : list installed packages or pkg files\r\n -L : list all available packages (-LL for description)\r\n -f : find missing libraries\r\n      -fi: install, -fl: list, -fd: remove\r\n -p : patch package\r\n -P : unpatch package\r\n```\r\n\r\nConfig\r\n------\r\n\r\nIt requires a config file. For most users `cp config.sample config` will work fine.\r\n\r\nContributing\r\n============\r\n\r\nContributions are welcome to both the package repo, documentation or the package manager itself.\r\n\r\nPackages\r\n--------\r\n\r\nThe format for packages are as follows.\r\n\r\n```shell\r\n# required\r\nURL=http://example.com/testpkg-0.3.2.tar.gz # direct source url\r\nTYPE=tar # tar/git\r\nDESC=\"a test package for vdpm\" # short description for the package\r\n# optional\r\nTARGET=\"libtest.a\" # custom target for make\r\nPKGINSTALL=\"${MAKE} install-libtest.a\" # custom install command\r\nUSER_CFGARGS=\"--disable-shared --disable-threadsafe\" # configure arguments\r\nCFLAGS=\"${CFLAGS} -O3\" # CFLAGS (must include ${CFLAGS} unless the intention is to replace computed CFLAGS)\r\n```\r\n\r\nThey need to be placed in `pkg/` with their filename matching the extracted folder/git clone folder of the source.\r\n\r\nLicense\r\n-------\r\nLGPL v2.1 or later.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}